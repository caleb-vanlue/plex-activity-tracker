name: Deploy Plex History API

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run unit tests
        shell: powershell
        run: |
          docker build --target test -t plex-history-app:test .
          docker run --rm plex-history-app:test

          if ($LASTEXITCODE -ne 0) {
            Write-Error "Tests failed with exit code $LASTEXITCODE"
            exit 1
          }

  deploy:
    needs: test
    runs-on: self-hosted
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        shell: powershell
        run: |
          docker-compose build plex-history-app

      - name: Deploy service
        shell: powershell
        env:
          DB_HOST: host.docker.internal
          FILE_STORAGE_API_URL: http://file-storage:3001
          FILE_STORAGE_TIMEOUT_MS: 15000
          FILE_STORAGE_MAX_RETRIES: 3
          NODE_ENV: production
        run: |
          # Create environment file for docker-compose
          @"
          DB_HOST=$env:DB_HOST
          FILE_STORAGE_API_URL=$env:FILE_STORAGE_API_URL
          FILE_STORAGE_TIMEOUT_MS=$env:FILE_STORAGE_TIMEOUT_MS
          FILE_STORAGE_MAX_RETRIES=$env:FILE_STORAGE_MAX_RETRIES
          NODE_ENV=$env:NODE_ENV
          "@ | Out-File -Encoding utf8 .env

          docker-compose run --rm plex-history-app npm run migration:run

          $containerExists = docker ps -a --filter "name=plex-history-app" --format "{{.Names}}"
          if ($containerExists) {
            Write-Host "Stopping and removing existing container..."
            docker stop plex-history-app
            docker rm plex-history-app
          }

          docker-compose up -d plex-history-app

          docker ps -f name=plex-history-app

      - name: Cleanup
        shell: powershell
        run: |
          docker image prune -a --filter "until=72h" --force
